namespace = uma_system_ini

###创建sky的星系（已经被废除）
country_event = {
    id = uma_system_ini.1
    hide_window = yes
    is_triggered_only = yes

	#fire_only_once = yes

    immediate = {
		random_country = {
			if = {
				limit = { 
					is_ai = no 
                    has_authority = auth_trainingcenter
				}

				###sky星系
				capital_scope = {
					spawn_system = {
						min_distance = 10
						max_distance = 50
						#min_jumps = 3 #之后修改
						#max_jumps = 8 #之后修改
						hyperlane = yes
						is_discovered = yes
						initializer = "uma_seiun_sky_system_initializer"
						effect = {
							save_global_event_target_as = uma_where_seiun_sky_is
						}
					}
				}


				###小草星系
				capital_scope = {
					spawn_system = {
						min_distance = 10
						max_distance = 50
						#min_jumps = 2 #之后修改
						#max_jumps = 5 #之后修改
						hyperlane = yes
						is_discovered = yes
						initializer = "uma_grass_wonder_system_initializer"
						effect = {
							save_global_event_target_as = uma_where_grass_wonder_is
						}
					}
				}

				###绿帽星系
				capital_scope = {
					spawn_system = {
						min_distance = 10
						max_distance = 50
						#min_jumps = 5 #之后修改
						#max_jumps = 15 #之后修改
						hyperlane = yes
						is_discovered = yes
						initializer = "uma_shop_center_system_initializer"
						effect = {
							save_global_event_target_as = uma_where_shop_center_is
						}
					}
				}
				
			}
		}
    }

	# option = {
	# 	name = "???"
	# 	random_country = {
	# 		if = {
	# 			limit = { 
	# 				is_ai = no 
    #                 has_authority = auth_trainingcenter
	# 			}

	# 			###sky星系
	# 			capital_scope = {
	# 				spawn_system = {
	# 					min_distance = 5
	# 					max_distance = 60
	# 					min_jumps = 1 #之后修改
	# 					max_jumps = 2 #之后修改
	# 					hyperlane = yes
	# 					is_discovered = yes
	# 					initializer = "uma_seiun_sky_system_initializer"
	# 					effect = {
	# 						save_global_event_target_as = uma_where_seiun_sky_is
	# 					}
	# 				}
	# 			}


	# 			###小草星系
	# 			capital_scope = {
	# 				spawn_system = {
	# 					min_distance = 5
	# 					max_distance = 60
	# 					min_jumps = 1 #之后修改
	# 					max_jumps = 2 #之后修改
	# 					hyperlane = yes
	# 					is_discovered = yes
	# 					initializer = "uma_grass_wonder_system_initializer"
	# 					effect = {
	# 						save_global_event_target_as = uma_where_grass_wonder_is
	# 					}
	# 				}
	# 			}

				
	# 		}
	# 	}

	# }

}


#目前使用的星系生成事件，挂靠在母星初始化的onaction里
planet_event = {
    id = uma_system_ini.2
    hide_window = yes
    is_triggered_only = yes

	#fire_only_once = yes
	trigger = {
		owner = {
			is_ai = no 
			has_authority = auth_trainingcenter
		}
	}

    immediate = {

				###！！！请注意，创建星系的scope需要system，而capital_scope的scope本质上是planet
				###所以要像下面这样才能正确执行创建语句

				owner = {
					save_event_target_as = uma_player_country
				}
				
				###定位阶段
				###确定sky的星系
				random_system = {
					limit = {
						distance = { 
							source = root.solar_system
							min_distance >= 50
							max_distance <= 250
							type = hyperlane
							#min_jumps = 3
							#max_jumps = 7
						}
					}
					set_star_flag = uma_seiun_sky_system_created
					save_event_target_as = uma_seiun_sky_system_will_create
				}

				###确定小草的星系
				random_system = {
					limit = {
						distance = { 
							source = root.solar_system
							min_distance >= 50
							max_distance <= 250
							type = hyperlane
							#min_jumps = 3
							#max_jumps = 7
						}
						any_neighbor_system = {
							NOT = { has_star_flag = uma_seiun_sky_system_created }
						}
					}
					set_star_flag = uma_grass_wonder_system_created
					save_event_target_as = uma_grass_wonder_system_will_create
				}				

				###确定绿帽的星系
				random_system = {
					limit = {
						distance = { 
							source = root.solar_system
							min_distance >= 50
							max_distance <= 250
							type = hyperlane
							#min_jumps = 3
							#max_jumps = 7
						}
						any_neighbor_system = {
							NOT = { has_star_flag = uma_seiun_sky_system_created }
							NOT = { has_star_flag = uma_grass_wonder_system_created }
						}
					}
					set_star_flag = uma_shop_center_system_created
					save_event_target_as = uma_shop_center_system_will_create
				}		


				
				###生成阶段
				###sky星系
				event_target:uma_seiun_sky_system_will_create = {
					spawn_system = {
						min_distance = 10
						max_distance = 100
						#min_jumps = 1 #之后修改
						#max_jumps = 2 #之后修改
						hyperlane = yes
						is_discovered = yes
						initializer = "uma_seiun_sky_system_initializer"
						effect = {
							save_global_event_target_as = uma_where_seiun_sky_is
						}
					}
				}

				# 或许也可以用这种！
				# random_system = {
				# 	limit = { has_star_flag = uma_seiun_sky_system_created }
				# 	spawn_system = {
				# 		min_distance = 10
				# 		max_distance = 50
				# 		min_jumps = 1 #之后修改
				# 		max_jumps = 2 #之后修改
				# 		hyperlane = yes
				# 		is_discovered = yes
				# 		initializer = "uma_seiun_sky_system_initializer"
				# 		effect = {
				# 			save_global_event_target_as = uma_where_seiun_sky_is
				# 		}
				# 	}
				# }

				###小草星系
				event_target:uma_grass_wonder_system_will_create = {
					spawn_system = {
						min_distance = 10
						max_distance = 100
						#min_jumps = 0 #之后修改
						#max_jumps = 0 #之后修改
						hyperlane = yes
						is_discovered = yes
						initializer = "uma_grass_wonder_system_initializer"
						effect = {
							save_global_event_target_as = uma_where_grass_wonder_is
						}
					}
				}

				###绿帽星系
				event_target:uma_shop_center_system_will_create = {
					spawn_system = {
						min_distance = 10
						max_distance = 100
						#min_jumps = 1 #之后修改
						#max_jumps = 2 #之后修改
						hyperlane = yes
						is_discovered = yes
						initializer = "uma_shop_center_system_initializer"
						effect = {
							save_global_event_target_as = uma_where_shop_center_is
						}
					}
				}

				owner = {
					country_event = {
						id = uma_shop_center.1
						days = 10
					}
				}
				# planet_event = {
				# 	id = uma_shop_center.1 #绿帽商店飞地初始化
				# 	days = 3
				# }
				# random_system = {
				# 	limit = { has_star_flag = uma_grass_wonder_system_created }
				# 	spawn_system = {
				# 		min_distance = 10
				# 		max_distance = 50
				# 		min_jumps = 0 #之后修改
				# 		max_jumps = 0 #之后修改
				# 		hyperlane = yes
				# 		is_discovered = yes
				# 		initializer = "uma_grass_wonder_system_initializer"
				# 		effect = {
				# 			save_global_event_target_as = uma_where_grass_wonder_is
				# 		}
				# 	}
				# }

				# ###sky星系
				# root.solar_system = {
				# 	spawn_system = {
				# 		min_distance = 10
				# 		max_distance = 50
				# 		min_jumps = 1 #之后修改
				# 		max_jumps = 3 #之后修改
				# 		hyperlane = yes
				# 		is_discovered = yes
				# 		initializer = "uma_seiun_sky_system_initializer"
				# 		effect = {
				# 			save_global_event_target_as = uma_where_seiun_sky_is
				# 		}
				# 	}
				# }


				# ###小草星系
				# root.solar_system = {
				# 	spawn_system = {
				# 		min_distance = 10
				# 		max_distance = 50
				# 		min_jumps = 1 #之后修改
				# 		max_jumps = 3 #之后修改
				# 		hyperlane = yes
				# 		is_discovered = yes
				# 		initializer = "uma_grass_wonder_system_initializer"
				# 		effect = {
				# 			save_global_event_target_as = uma_where_grass_wonder_is
				# 		}
				# 	}
				# }
    }	
}